set number
set relativenumber
syntax on

" =====================================
"  Dracula colorscheme
" =====================================
" let g:dracula_italic = 0
colorscheme dracula
highlight Normal ctermbg=None
let g:dracula_italic = 1

" =====================================
"  FZF
" =====================================
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

nnoremap <C-p> :Files<CR>
nnoremap <C-g>g :Ag<CR>

" =====================================
"  UltiSnips
" =====================================
let g:UltiSnipsExpandTrigger               = '<C-l>'
let g:UltiSnipsJumpForwardTrigger          = '<tab>'

" =====================================
"  Netrw
" =====================================
let g:netrw_liststyle=3

" =====================================
"  Custom Styles
" =====================================
hi Comment gui=italic cterm=italic
hi htmlArg gui=italic cterm=italic


" =====================================
"  Emmet Settings
" =====================================
let g:user_emmet_settings = {
\  'javascript.jsx' : {
\      'extends' : 'jsx',
\  },
\}

" =====================================
"  COC
" =====================================
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()

inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" Faster updates for eslint messages
set updatetime=300

augroup CocConfig
  autocmd!
  " coc-highlight: enable highlighting for symbol under cursor
  autocmd CursorHold * silent call CocActionAsync('highlight')
augroup END

if has('nvim-0.4.3') || has('patch-8.2.0750')
  nnoremap <nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
  nnoremap <nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
  inoremap <nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
  inoremap <nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
endif

" =====================================
"  2 spaces 4 lyfe
" =====================================
filetype plugin indent on
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" =====================================
"  Airline (status tab)
" =====================================
let g:airline#extensions#branch#displayed_head_limit = 10


nnoremap <down> :m .+1<CR>==
nnoremap <up> :m .-2<CR>==
vnoremap <down> :m '>+1<CR>gv=gv
vnoremap <up> :m '<-2<CR>gv=gv

" =====================================
"  Tslime (sending selection to tmux)
" =====================================
vmap <C-c><C-c> <Plug>SendSelectionToTmux

" =====================================
"  Elixir helpers
" =====================================
iabbrev iins IO.inspect(, label: String.duplicate("ðŸš¨", 20))<Esc>34hi


lua << EOF
require("nvim-treesitter.configs").setup(
    {
        ensure_installed = {
            "eex",
            "elixir",
            "erlang",
            "heex",
            "html",
            "surface"
        },
        highlight = {enable = true},
    })
EOF
